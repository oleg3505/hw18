{"version":3,"sources":["contacts.js","reportWebVitals.js","index.js"],"names":["contacts","firstName","lastName","phone","gender","Contact","className","this","props","contact","src","alt","undefined","React","Component","Contacts","state","search","male","female","none","handleSearchChange","event","setState","target","value","searchResult","filter","obj","contactFirstName","toLowerCase","includes","contactLastName","contactPhone","length","type","onChange","placeholder","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kLAQMA,EAAW,CAAC,CACdC,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPC,OAAQ,QACT,CACCH,UAAW,iCACXC,SAAU,+DACVC,MAAO,gBACPC,OAAQ,UACT,CACCH,UAAW,yDACXC,SAAU,mDACVC,MAAO,iBACR,CACCF,UAAW,iCACXC,SAAU,mDACVC,MAAO,gBACPC,OAAQ,UACT,CACCH,UAAW,uCACXC,SAAU,yDACVC,MAAO,gBACPC,OAAQ,QACT,CACCH,UAAW,uCACXC,SAAU,6CACVC,MAAO,gBACPC,OAAQ,SAINC,E,4JAEF,WACI,OACI,sBAAKC,UAAU,UAAf,UACI,gCAC8B,SAA7BC,KAAKC,MAAMC,QAAQL,QAAmB,qBAAKE,UAAU,OAAOI,IAAI,WAAWC,IAAI,SAClD,WAA7BJ,KAAKC,MAAMC,QAAQL,QAAqB,qBAAKE,UAAU,OAAOI,IAAI,aAAaC,IAAI,cACtDC,IAA7BL,KAAKC,MAAMC,QAAQL,QAAsB,qBAAKE,UAAU,OAAOI,IAAI,aAAaC,IAAI,YAErF,sBAAKL,UAAU,OAAf,UACI,oCAAOC,KAAKC,MAAMC,QAAQR,UAA1B,QACA,8BAAMM,KAAKC,MAAMC,QAAQP,cAG7B,qBAAKI,UAAU,SAAf,SACKC,KAAKC,MAAMC,QAAQN,e,GAhBlBU,IAAMC,WA8EbC,E,4MApDXC,MAAQ,CACJhB,SAAWA,EACXiB,OAAS,GACTC,KAAM,OACNC,OAAQ,SACRC,UAAMR,G,EAIVS,mBAAqB,SAACC,GAClB,EAAKC,SAAS,CAACN,OAAQK,EAAME,OAAOC,QAAQ,WACxC,IAAMC,EAAe1B,EAAS2B,QAAO,SAACC,GAClC,IAAMC,EAAmBD,EAAI3B,UAAU6B,cAAcC,SAAS,EAAKf,MAAMC,OAAOa,eAC1EE,EAAkBJ,EAAI1B,SAAS4B,cAAcC,SAAS,EAAKf,MAAMC,OAAOa,eACxEG,EAAeL,EAAIzB,MAAM2B,cAAcC,SAAS,EAAKf,MAAMC,OAAOa,eACxE,SAAGD,GAAoBG,GAAmBC,MAM3C,EAAKjB,MAAMC,OAAOiB,OAAS,EAC1B,EAAKX,SAAS,CAACvB,SAAUA,IAEtB0B,EAAaQ,OAAS,EACrB,EAAKX,SAAS,CAACvB,SAAU0B,IAEzB,EAAKH,SAAS,CAACvB,SAAU,S,4CAMzC,WAEI,OACI,8BACA,sBAAKM,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACA,uBAAOA,UAAU,QAAQ6B,KAAK,OAAOV,MAAOlB,KAAKS,MAAMC,OAAQmB,SAAU7B,KAAKc,mBAAoBgB,YAAY,qCAE7G9B,KAAKS,MAAMhB,SAASsC,KAAI,SAAA7B,GAAO,OAC5B,cAAC,EAAD,CAASA,QAASA,GAAcA,EAAQR,uB,GA3CrCY,IAAMC,WCrDdyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,8BACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.22242dcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import male from './public/male.jpg'\r\n// import female from './public/female.png'\r\n// import anonim from './public/anonim.png'\r\n\r\n\r\nconst contacts = [{\r\n    firstName: \"Барней\",\r\n    lastName: \"Стинсовський\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Робін\",\r\n    lastName: \"Щербатська\",\r\n    phone: \"+380931460123\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Анонімний\",\r\n    lastName: \"Анонімус\",\r\n    phone: \"+380666666666\"\r\n}, {\r\n    firstName: \"Лілія\",\r\n    lastName: \"Олдровна\",\r\n    phone: \"+380504691254\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Маршен\",\r\n    lastName: \"Еріксонян\",\r\n    phone: \"+380739432123\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Теодор\",\r\n    lastName: \"Мотсбес\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}];\r\n\r\n\r\nclass Contact extends React.Component {\r\n    \r\n    render(){\r\n        return(\r\n            <div className='contact'>\r\n                <div> \r\n                {this.props.contact.gender ===\"male\" &&<img className=\"icon\" src='male.jpg' alt=\"male\"/>}\r\n                {this.props.contact.gender ===\"female\" &&<img className=\"icon\" src='female.png' alt=\"male\"/>}\r\n                {this.props.contact.gender ===undefined &&<img className=\"icon\" src='anonim.png' alt=\"male\"/>}\r\n                </div>\r\n                <div className='name'>\r\n                    <div> {this.props.contact.firstName}  </div>\r\n                    <div>{this.props.contact.lastName}</div>\r\n                </div>\r\n               \r\n                <div className='number'>\r\n                    {this.props.contact.phone}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    state = { \r\n        contacts : contacts,\r\n        search : \"\",\r\n        male: 'male',\r\n        female: \"female\",\r\n        none: undefined\r\n        \r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.setState({search: event.target.value}, () => {\r\n            const searchResult = contacts.filter((obj) => {\r\n                const contactFirstName = obj.firstName.toLowerCase().includes(this.state.search.toLowerCase());\r\n                const contactLastName = obj.lastName.toLowerCase().includes(this.state.search.toLowerCase());\r\n                const contactPhone = obj.phone.toLowerCase().includes(this.state.search.toLowerCase());\r\n                if(contactFirstName || contactLastName || contactPhone) {\r\n                    return true\r\n                } else {\r\n                    return false\r\n                }\r\n            })\r\n            if(this.state.search.length < 1) {\r\n                this.setState({contacts: contacts})\r\n            } else {\r\n                if(searchResult.length > 0) {\r\n                    this.setState({contacts: searchResult})\r\n                } else {\r\n                    this.setState({contacts: []})\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n            <div className='app'>\r\n                <div className='search'>\r\n                <input className=\"input\" type='text' value={this.state.search} onChange={this.handleSearchChange} placeholder=\"Пошук\"/>\r\n                </div>\r\n                {this.state.contacts.map(contact => (\r\n                    <Contact contact={contact} key={contact.firstName}/>\r\n                ))}\r\n            </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n\r\n}\r\nexport default Contacts;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Contacts from './contacts';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <Contacts/>\n\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}